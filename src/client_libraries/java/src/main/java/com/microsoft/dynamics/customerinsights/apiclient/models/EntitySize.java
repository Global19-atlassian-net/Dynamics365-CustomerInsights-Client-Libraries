/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.dynamics.customerinsights.apiclient.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The information about an entity size.
 */
public class EntitySize {
    /**
     * Gets the entity Name.
     */
    @JsonProperty(value = "qualifiedEntityName")
    private String qualifiedEntityName;

    /**
     * Gets the size of the entire entity (in Bytes).
     */
    @JsonProperty(value = "size")
    private Long size;

    /**
     * Gets the row count of the entity.
     */
    @JsonProperty(value = "rowCount")
    private Long rowCount;

    /**
     * Get gets the entity Name.
     *
     * @return the qualifiedEntityName value
     */
    public String qualifiedEntityName() {
        return this.qualifiedEntityName;
    }

    /**
     * Set gets the entity Name.
     *
     * @param qualifiedEntityName the qualifiedEntityName value to set
     * @return the EntitySize object itself.
     */
    public EntitySize withQualifiedEntityName(String qualifiedEntityName) {
        this.qualifiedEntityName = qualifiedEntityName;
        return this;
    }

    /**
     * Get gets the size of the entire entity (in Bytes).
     *
     * @return the size value
     */
    public Long size() {
        return this.size;
    }

    /**
     * Set gets the size of the entire entity (in Bytes).
     *
     * @param size the size value to set
     * @return the EntitySize object itself.
     */
    public EntitySize withSize(Long size) {
        this.size = size;
        return this;
    }

    /**
     * Get gets the row count of the entity.
     *
     * @return the rowCount value
     */
    public Long rowCount() {
        return this.rowCount;
    }

    /**
     * Set gets the row count of the entity.
     *
     * @param rowCount the rowCount value to set
     * @return the EntitySize object itself.
     */
    public EntitySize withRowCount(Long rowCount) {
        this.rowCount = rowCount;
        return this;
    }

}
