/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.dynamics.customerinsights.apiclient.models;

import java.util.List;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The AttributeDataProfile model.
 */
public class AttributeDataProfile {
    /**
     * Gets or sets the distribution of the top 100 values.
     */
    @JsonProperty(value = "valueCounts")
    private List<ValueCount> valueCounts;

    /**
     * Gets or sets the histogram information. Ordered from smallest to largest
     * bin.
     */
    @JsonProperty(value = "histogram")
    private List<HistogramBin> histogram;

    /**
     * Gets or sets the string lengths and the count of string values with
     * those lengths.
     */
    @JsonProperty(value = "stringLengthCounts")
    private List<StringLengthCount> stringLengthCounts;

    /**
     * Gets or sets the qualified entity name.
     */
    @JsonProperty(value = "qualifiedEntityName")
    private String qualifiedEntityName;

    /**
     * Gets or sets the attribute name.
     */
    @JsonProperty(value = "attributeName")
    private String attributeName;

    /**
     * Gets or sets the minimum value.
     */
    @JsonProperty(value = "min")
    private Object min;

    /**
     * Gets or sets the maximum value.
     */
    @JsonProperty(value = "max")
    private Object max;

    /**
     * Gets or sets the total row count.
     */
    @JsonProperty(value = "count")
    private Long count;

    /**
     * Gets or sets the row count of missing values.
     */
    @JsonProperty(value = "missingCount")
    private Long missingCount;

    /**
     * Gets or sets the number of error values.
     */
    @JsonProperty(value = "errorCount")
    private Long errorCount;

    /**
     * The quantiles property.
     */
    @JsonProperty(value = "quantiles")
    private Quantiles quantiles;

    /**
     * The moments property.
     */
    @JsonProperty(value = "moments")
    private Moments moments;

    /**
     * Gets or sets the number of unique values.
     */
    @JsonProperty(value = "uniqueValueCount")
    private Long uniqueValueCount;

    /**
     * Gets or sets the profiling date.
     */
    @JsonProperty(value = "profilingDate")
    private DateTime profilingDate;

    /**
     * Gets a value indicating whether this attribute can be used as a primary
     * key of the entity.
     */
    @JsonProperty(value = "isSuggestedPrimaryKey", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isSuggestedPrimaryKey;

    /**
     * Get gets or sets the distribution of the top 100 values.
     *
     * @return the valueCounts value
     */
    public List<ValueCount> valueCounts() {
        return this.valueCounts;
    }

    /**
     * Set gets or sets the distribution of the top 100 values.
     *
     * @param valueCounts the valueCounts value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withValueCounts(List<ValueCount> valueCounts) {
        this.valueCounts = valueCounts;
        return this;
    }

    /**
     * Get gets or sets the histogram information. Ordered from smallest to largest bin.
     *
     * @return the histogram value
     */
    public List<HistogramBin> histogram() {
        return this.histogram;
    }

    /**
     * Set gets or sets the histogram information. Ordered from smallest to largest bin.
     *
     * @param histogram the histogram value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withHistogram(List<HistogramBin> histogram) {
        this.histogram = histogram;
        return this;
    }

    /**
     * Get gets or sets the string lengths and the count of string values with those lengths.
     *
     * @return the stringLengthCounts value
     */
    public List<StringLengthCount> stringLengthCounts() {
        return this.stringLengthCounts;
    }

    /**
     * Set gets or sets the string lengths and the count of string values with those lengths.
     *
     * @param stringLengthCounts the stringLengthCounts value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withStringLengthCounts(List<StringLengthCount> stringLengthCounts) {
        this.stringLengthCounts = stringLengthCounts;
        return this;
    }

    /**
     * Get gets or sets the qualified entity name.
     *
     * @return the qualifiedEntityName value
     */
    public String qualifiedEntityName() {
        return this.qualifiedEntityName;
    }

    /**
     * Set gets or sets the qualified entity name.
     *
     * @param qualifiedEntityName the qualifiedEntityName value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withQualifiedEntityName(String qualifiedEntityName) {
        this.qualifiedEntityName = qualifiedEntityName;
        return this;
    }

    /**
     * Get gets or sets the attribute name.
     *
     * @return the attributeName value
     */
    public String attributeName() {
        return this.attributeName;
    }

    /**
     * Set gets or sets the attribute name.
     *
     * @param attributeName the attributeName value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withAttributeName(String attributeName) {
        this.attributeName = attributeName;
        return this;
    }

    /**
     * Get gets or sets the minimum value.
     *
     * @return the min value
     */
    public Object min() {
        return this.min;
    }

    /**
     * Set gets or sets the minimum value.
     *
     * @param min the min value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withMin(Object min) {
        this.min = min;
        return this;
    }

    /**
     * Get gets or sets the maximum value.
     *
     * @return the max value
     */
    public Object max() {
        return this.max;
    }

    /**
     * Set gets or sets the maximum value.
     *
     * @param max the max value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withMax(Object max) {
        this.max = max;
        return this;
    }

    /**
     * Get gets or sets the total row count.
     *
     * @return the count value
     */
    public Long count() {
        return this.count;
    }

    /**
     * Set gets or sets the total row count.
     *
     * @param count the count value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withCount(Long count) {
        this.count = count;
        return this;
    }

    /**
     * Get gets or sets the row count of missing values.
     *
     * @return the missingCount value
     */
    public Long missingCount() {
        return this.missingCount;
    }

    /**
     * Set gets or sets the row count of missing values.
     *
     * @param missingCount the missingCount value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withMissingCount(Long missingCount) {
        this.missingCount = missingCount;
        return this;
    }

    /**
     * Get gets or sets the number of error values.
     *
     * @return the errorCount value
     */
    public Long errorCount() {
        return this.errorCount;
    }

    /**
     * Set gets or sets the number of error values.
     *
     * @param errorCount the errorCount value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withErrorCount(Long errorCount) {
        this.errorCount = errorCount;
        return this;
    }

    /**
     * Get the quantiles value.
     *
     * @return the quantiles value
     */
    public Quantiles quantiles() {
        return this.quantiles;
    }

    /**
     * Set the quantiles value.
     *
     * @param quantiles the quantiles value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withQuantiles(Quantiles quantiles) {
        this.quantiles = quantiles;
        return this;
    }

    /**
     * Get the moments value.
     *
     * @return the moments value
     */
    public Moments moments() {
        return this.moments;
    }

    /**
     * Set the moments value.
     *
     * @param moments the moments value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withMoments(Moments moments) {
        this.moments = moments;
        return this;
    }

    /**
     * Get gets or sets the number of unique values.
     *
     * @return the uniqueValueCount value
     */
    public Long uniqueValueCount() {
        return this.uniqueValueCount;
    }

    /**
     * Set gets or sets the number of unique values.
     *
     * @param uniqueValueCount the uniqueValueCount value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withUniqueValueCount(Long uniqueValueCount) {
        this.uniqueValueCount = uniqueValueCount;
        return this;
    }

    /**
     * Get gets or sets the profiling date.
     *
     * @return the profilingDate value
     */
    public DateTime profilingDate() {
        return this.profilingDate;
    }

    /**
     * Set gets or sets the profiling date.
     *
     * @param profilingDate the profilingDate value to set
     * @return the AttributeDataProfile object itself.
     */
    public AttributeDataProfile withProfilingDate(DateTime profilingDate) {
        this.profilingDate = profilingDate;
        return this;
    }

    /**
     * Get gets a value indicating whether this attribute can be used as a primary key of the entity.
     *
     * @return the isSuggestedPrimaryKey value
     */
    public Boolean isSuggestedPrimaryKey() {
        return this.isSuggestedPrimaryKey;
    }

}
