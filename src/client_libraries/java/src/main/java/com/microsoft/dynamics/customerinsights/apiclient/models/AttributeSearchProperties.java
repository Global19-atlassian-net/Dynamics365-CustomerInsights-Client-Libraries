/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.dynamics.customerinsights.apiclient.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents search configuration for an attribute.
 */
public class AttributeSearchProperties {
    /**
     * Gets a value indicating whether the attribute supports full text search.
     */
    @JsonProperty(value = "isSearchable")
    private Boolean isSearchable;

    /**
     * Gets a value indicating whether the attribute supports filtering.
     */
    @JsonProperty(value = "isFilterable")
    private Boolean isFilterable;

    /**
     * Gets a value indicating whether the attribute can be included as facet
     * results.
     */
    @JsonProperty(value = "isFacetable")
    private Boolean isFacetable;

    /**
     * Gets an optional specification for search faceting used at query time
     * (advanced).
     */
    @JsonProperty(value = "facetSpecification")
    private String facetSpecification;

    /**
     * Gets a value indicating whether the attribute supports ordering.
     */
    @JsonProperty(value = "isSortable")
    private Boolean isSortable;

    /**
     * Get gets a value indicating whether the attribute supports full text search.
     *
     * @return the isSearchable value
     */
    public Boolean isSearchable() {
        return this.isSearchable;
    }

    /**
     * Set gets a value indicating whether the attribute supports full text search.
     *
     * @param isSearchable the isSearchable value to set
     * @return the AttributeSearchProperties object itself.
     */
    public AttributeSearchProperties withIsSearchable(Boolean isSearchable) {
        this.isSearchable = isSearchable;
        return this;
    }

    /**
     * Get gets a value indicating whether the attribute supports filtering.
     *
     * @return the isFilterable value
     */
    public Boolean isFilterable() {
        return this.isFilterable;
    }

    /**
     * Set gets a value indicating whether the attribute supports filtering.
     *
     * @param isFilterable the isFilterable value to set
     * @return the AttributeSearchProperties object itself.
     */
    public AttributeSearchProperties withIsFilterable(Boolean isFilterable) {
        this.isFilterable = isFilterable;
        return this;
    }

    /**
     * Get gets a value indicating whether the attribute can be included as facet results.
     *
     * @return the isFacetable value
     */
    public Boolean isFacetable() {
        return this.isFacetable;
    }

    /**
     * Set gets a value indicating whether the attribute can be included as facet results.
     *
     * @param isFacetable the isFacetable value to set
     * @return the AttributeSearchProperties object itself.
     */
    public AttributeSearchProperties withIsFacetable(Boolean isFacetable) {
        this.isFacetable = isFacetable;
        return this;
    }

    /**
     * Get gets an optional specification for search faceting used at query time (advanced).
     *
     * @return the facetSpecification value
     */
    public String facetSpecification() {
        return this.facetSpecification;
    }

    /**
     * Set gets an optional specification for search faceting used at query time (advanced).
     *
     * @param facetSpecification the facetSpecification value to set
     * @return the AttributeSearchProperties object itself.
     */
    public AttributeSearchProperties withFacetSpecification(String facetSpecification) {
        this.facetSpecification = facetSpecification;
        return this;
    }

    /**
     * Get gets a value indicating whether the attribute supports ordering.
     *
     * @return the isSortable value
     */
    public Boolean isSortable() {
        return this.isSortable;
    }

    /**
     * Set gets a value indicating whether the attribute supports ordering.
     *
     * @param isSortable the isSortable value to set
     * @return the AttributeSearchProperties object itself.
     */
    public AttributeSearchProperties withIsSortable(Boolean isSortable) {
        this.isSortable = isSortable;
        return this;
    }

}
