/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a InstanceCopyRequest.
 */
class InstanceCopyRequest {
  /**
   * Create a InstanceCopyRequest.
   * @property {uuid} [instanceIdToCopy]
   * @property {object} [instanceMetadata]
   * @property {string} [instanceMetadata.name] Gets the user defined instance
   * name.
   * @property {string} [instanceMetadata.provisioningState] Possible values
   * include: 'new', 'creating', 'active', 'createFailed', 'updateFailed',
   * 'deleting', 'refreshCredentials', 'resetInstanceInProgress'
   * @property {string} [instanceMetadata.instanceType] Possible values
   * include: 'trial', 'sandbox', 'production'
   * @property {object} [instanceMetadata.refreshSchedule]
   * @property {boolean} [instanceMetadata.refreshSchedule.isActive] Gets a
   * value indicating whether the schedule is active.
   * @property {string} [instanceMetadata.refreshSchedule.timezoneId] Gets the
   * ID of the timezone
   * @property {array} [instanceMetadata.refreshSchedule.cronSchedules] Gets
   * the schedule in CRON format
   * @property {uuid} [instanceMetadata.refreshSchedule.scheduleId] Gets the ID
   * of the schedule
   * @property {uuid} [instanceMetadata.refreshSchedule.instanceId] Gets the
   * Customer Insights instance id associated with this object.
   * @property {date} [instanceMetadata.expiryTimeUtc] Gets the time the
   * instance is set to expire.
   * @property {string} [instanceMetadata.region] Gets the Azure region where
   * the instance lives.
   * @property {string} [instanceMetadata.bapEnvironmentId] Gets the Id of the
   * BAP Environment associated with the current instance.
   * @property {string} [instanceMetadata.ppdfProvisionState] Possible values
   * include: 'notStarted', 'creating', 'created', 'attaching', 'attached',
   * 'installing', 'installed', 'failed'
   * @property {string} [instanceMetadata.pbiProvisionState] Possible values
   * include: 'notStarted', 'creating', 'created', 'failed'
   * @property {object} [instanceMetadata.cdsOrgInfo]
   * @property {string} [instanceMetadata.cdsOrgInfo.friendlyName] Gets the Cds
   * Organization Friendly Name
   * @property {string} [instanceMetadata.cdsOrgInfo.url] Gets the Cds
   * Organization Url
   * @property {string} [instanceMetadata.cdsOrgInfo.state] Gets the Cds
   * Organization State
   * @property {object} [instanceMetadata.cdsMdlInfo]
   * @property {object} [instanceMetadata.cdsMdlInfo.privateWorkSpace]
   * @property {string} [instanceMetadata.cdsMdlInfo.privateWorkSpace.name]
   * Gets the Workspace Friendly Name
   * @property {string}
   * [instanceMetadata.cdsMdlInfo.privateWorkSpace.uniqueName] Gets the Cds
   * workspace unique Name
   * @property {object} [instanceMetadata.cdsMdlInfo.publicWorkSpace]
   * @property {string} [instanceMetadata.cdsMdlInfo.publicWorkSpace.name] Gets
   * the Workspace Friendly Name
   * @property {string}
   * [instanceMetadata.cdsMdlInfo.publicWorkSpace.uniqueName] Gets the Cds
   * workspace unique Name
   * @property {number} [instanceMetadata.maxTrialExtensionsAllowed] Gets the
   * total number of extensions allowed if this is trial instance
   * @property {string} [instanceMetadata.trialExtensionHistory] Stores the
   * details of trial extensions done if this is a trial instance
   * @property {number} [instanceMetadata.version] Gets the version number of
   * this object.
   * @property {string} [instanceMetadata.updatedBy] Gets the UPN of the user
   * who last updated this record.
   * @property {date} [instanceMetadata.updatedUtc] Gets the time the object
   * was last updated.
   * @property {string} [instanceMetadata.createdBy] Gets the email address of
   * the user who created this record.
   * @property {date} [instanceMetadata.createdUtc] Gets the time the object
   * was initially created.
   * @property {uuid} [instanceMetadata.instanceId] Gets the Customer Insights
   * instance id associated with this object.
   * @property {object} [byosaResourceMetadata]
   * @property {string} [byosaResourceMetadata.kind] Possible values include:
   * 'bearerAuthenticationConnection', 'sshKeyAuthenticationConnection',
   * 'apiKeyAuthenticationConnection', 'basicAuthenticationConnection',
   * 'adlsGen2', 'd365Sales', 'd365Marketing', 'attachCds', 'ftp',
   * 'facebookAds', 'http', 'mailchimp', 'googleAds'
   * @property {uuid} [byosaResourceMetadata.resourceId] Gets the Id of the
   * resource.
   * @property {uuid} [byosaResourceMetadata.operationId] Gets the Id of the
   * operation being performed on the resource.
   * @property {string} [byosaResourceMetadata.resourceType] Possible values
   * include: 'adlsGen2', 'd365Sales', 'cds', 'ftp',
   * 'bearerAuthenticationConnection', 'sshKeyAuthenticationConnection',
   * 'apiKeyAuthenticationConnection', 'basicAuthenticationConnection',
   * 'facebookAds', 'http', 'mailchimp', 'googleAds'
   * @property {string} [byosaResourceMetadata.name] Gets the Name of the
   * resource.
   * @property {string} [byosaResourceMetadata.description] Gets the
   * Description of the resource.
   * @property {number} [byosaResourceMetadata.version] Gets the version number
   * of this object.
   * @property {string} [byosaResourceMetadata.updatedBy] Gets the UPN of the
   * user who last updated this record.
   * @property {date} [byosaResourceMetadata.updatedUtc] Gets the time the
   * object was last updated.
   * @property {string} [byosaResourceMetadata.createdBy] Gets the email
   * address of the user who created this record.
   * @property {date} [byosaResourceMetadata.createdUtc] Gets the time the
   * object was initially created.
   * @property {uuid} [byosaResourceMetadata.instanceId] Gets the Customer
   * Insights instance id associated with this object.
   * @property {object} [cdsResourceMetadata]
   * @property {string} [cdsResourceMetadata.kind] Possible values include:
   * 'bearerAuthenticationConnection', 'sshKeyAuthenticationConnection',
   * 'apiKeyAuthenticationConnection', 'basicAuthenticationConnection',
   * 'adlsGen2', 'd365Sales', 'd365Marketing', 'attachCds', 'ftp',
   * 'facebookAds', 'http', 'mailchimp', 'googleAds'
   * @property {uuid} [cdsResourceMetadata.resourceId] Gets the Id of the
   * resource.
   * @property {uuid} [cdsResourceMetadata.operationId] Gets the Id of the
   * operation being performed on the resource.
   * @property {string} [cdsResourceMetadata.resourceType] Possible values
   * include: 'adlsGen2', 'd365Sales', 'cds', 'ftp',
   * 'bearerAuthenticationConnection', 'sshKeyAuthenticationConnection',
   * 'apiKeyAuthenticationConnection', 'basicAuthenticationConnection',
   * 'facebookAds', 'http', 'mailchimp', 'googleAds'
   * @property {string} [cdsResourceMetadata.name] Gets the Name of the
   * resource.
   * @property {string} [cdsResourceMetadata.description] Gets the Description
   * of the resource.
   * @property {number} [cdsResourceMetadata.version] Gets the version number
   * of this object.
   * @property {string} [cdsResourceMetadata.updatedBy] Gets the UPN of the
   * user who last updated this record.
   * @property {date} [cdsResourceMetadata.updatedUtc] Gets the time the object
   * was last updated.
   * @property {string} [cdsResourceMetadata.createdBy] Gets the email address
   * of the user who created this record.
   * @property {date} [cdsResourceMetadata.createdUtc] Gets the time the object
   * was initially created.
   * @property {uuid} [cdsResourceMetadata.instanceId] Gets the Customer
   * Insights instance id associated with this object.
   * @property {string} [bapProvisioningType] Possible values include: 'skip',
   * 'create', 'attach'
   */
  constructor() {
  }

  /**
   * Defines the metadata of InstanceCopyRequest
   *
   * @returns {object} metadata of InstanceCopyRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InstanceCopyRequest',
      type: {
        name: 'Composite',
        className: 'InstanceCopyRequest',
        modelProperties: {
          instanceIdToCopy: {
            required: false,
            serializedName: 'instanceIdToCopy',
            type: {
              name: 'String'
            }
          },
          instanceMetadata: {
            required: false,
            serializedName: 'instanceMetadata',
            type: {
              name: 'Composite',
              className: 'InstanceMetadata'
            }
          },
          byosaResourceMetadata: {
            required: false,
            serializedName: 'byosaResourceMetadata',
            type: {
              name: 'Composite',
              className: 'ResourceMetadata'
            }
          },
          cdsResourceMetadata: {
            required: false,
            serializedName: 'cdsResourceMetadata',
            type: {
              name: 'Composite',
              className: 'ResourceMetadata'
            }
          },
          bapProvisioningType: {
            required: false,
            serializedName: 'bapProvisioningType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = InstanceCopyRequest;
