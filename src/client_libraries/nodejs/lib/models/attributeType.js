/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents a property type backed by an EDM type and a CLR type. Enables
 * conversion of values from strings, as
 * well as various other type-based operations.
 *
 */
class AttributeType {
  /**
   * Create a AttributeType.
   * @property {string} [clrType] Gets the CLR Type for this property type.
   * @property {string} [cdsaType] Possible values include: 'unclassified',
   * 'string', 'int64', 'double', 'dateTime', 'dateTimeOffset', 'decimal',
   * 'boolean', 'guid', 'json'
   * @property {string} [edmTypeName] Gets the EDM type name for the property
   * type, in the format EdmTypeKind>".
   * @property {boolean} [isBoolean]
   * @property {boolean} [isDateTime]
   * @property {boolean} [isDecimal]
   * @property {boolean} [isNumber]
   * @property {boolean} [isValidType] Gets a value indicating whether this
   * type valid and supported by the runtime.
   * @property {string} [name] Gets the name of the property type. Will default
   * to the EdmTypeName but may be overridden by a property
   * type.
   * @property {object} [equalityComparer]
   * @property {object} [comparer]
   * @property {object} [oDataType]
   * @property {string} [oDataType.typeKind] Possible values include: 'none',
   * 'primitive', 'entity', 'complex', 'collection', 'entityReference', 'enum',
   * 'typeDefinition', 'untyped', 'path'
   * @property {boolean} [isCollection]
   */
  constructor() {
  }

  /**
   * Defines the metadata of AttributeType
   *
   * @returns {object} metadata of AttributeType
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AttributeType',
      type: {
        name: 'Composite',
        className: 'AttributeType',
        modelProperties: {
          clrType: {
            required: false,
            readOnly: true,
            serializedName: 'clrType',
            type: {
              name: 'String'
            }
          },
          cdsaType: {
            required: false,
            serializedName: 'cdsaType',
            type: {
              name: 'String'
            }
          },
          edmTypeName: {
            required: false,
            readOnly: true,
            serializedName: 'edmTypeName',
            type: {
              name: 'String'
            }
          },
          isBoolean: {
            required: false,
            readOnly: true,
            serializedName: 'isBoolean',
            type: {
              name: 'Boolean'
            }
          },
          isDateTime: {
            required: false,
            readOnly: true,
            serializedName: 'isDateTime',
            type: {
              name: 'Boolean'
            }
          },
          isDecimal: {
            required: false,
            readOnly: true,
            serializedName: 'isDecimal',
            type: {
              name: 'Boolean'
            }
          },
          isNumber: {
            required: false,
            readOnly: true,
            serializedName: 'isNumber',
            type: {
              name: 'Boolean'
            }
          },
          isValidType: {
            required: false,
            readOnly: true,
            serializedName: 'isValidType',
            type: {
              name: 'Boolean'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          equalityComparer: {
            required: false,
            serializedName: 'equalityComparer',
            type: {
              name: 'Object'
            }
          },
          comparer: {
            required: false,
            serializedName: 'comparer',
            type: {
              name: 'Object'
            }
          },
          oDataType: {
            required: false,
            serializedName: 'oDataType',
            type: {
              name: 'Composite',
              className: 'IEdmType'
            }
          },
          isCollection: {
            required: false,
            readOnly: true,
            serializedName: 'isCollection',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = AttributeType;
