/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents the status of a provisioning operation
 *
 */
class ProvisioningStatus {
  /**
   * Create a ProvisioningStatus.
   * @property {number} [totalSteps] Gets the total number of steps in the
   * provisioning operation.
   * @property {number} [currentStep] Gets the current step in the provisioning
   * operation.
   * @property {string} [currentOperation] Possible values include: 'starting',
   * 'creating', 'loadingData', 'completed'
   * @property {date} [createdTimeUtc] Gets the instance created time.
   * @property {date} [lastUpdatedTimeUtc] Gets the instance last updated time.
   * @property {array} [errors] Gets a list of provisioning errors.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ProvisioningStatus
   *
   * @returns {object} metadata of ProvisioningStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProvisioningStatus',
      type: {
        name: 'Composite',
        className: 'ProvisioningStatus',
        modelProperties: {
          totalSteps: {
            required: false,
            serializedName: 'totalSteps',
            type: {
              name: 'Number'
            }
          },
          currentStep: {
            required: false,
            serializedName: 'currentStep',
            type: {
              name: 'Number'
            }
          },
          currentOperation: {
            required: false,
            serializedName: 'currentOperation',
            type: {
              name: 'String'
            }
          },
          createdTimeUtc: {
            required: false,
            serializedName: 'createdTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          lastUpdatedTimeUtc: {
            required: false,
            serializedName: 'lastUpdatedTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          errors: {
            required: false,
            serializedName: 'errors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'InstanceProvisioningErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'InstanceProvisioningError'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ProvisioningStatus;
