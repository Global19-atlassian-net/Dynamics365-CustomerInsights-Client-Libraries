// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a property type backed by an EDM type and a CLR type.
    /// Enables conversion of values from strings, as
    /// well as various other type-based operations.
    /// </summary>
    public partial class AttributeType
    {
        /// <summary>
        /// Initializes a new instance of the AttributeType class.
        /// </summary>
        public AttributeType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AttributeType class.
        /// </summary>
        /// <param name="clrType">Gets the CLR Type for this property
        /// type.</param>
        /// <param name="cdsaType">Possible values include: 'unclassified',
        /// 'string', 'int64', 'double', 'dateTime', 'dateTimeOffset',
        /// 'decimal', 'boolean', 'guid', 'json'</param>
        /// <param name="edmTypeName">Gets the EDM type name for the property
        /// type, in the format EdmTypeKind&gt;".</param>
        /// <param name="isValidType">Gets a value indicating whether this type
        /// valid and supported by the runtime.</param>
        /// <param name="name">Gets the name of the property type. Will default
        /// to the EdmTypeName but may be overridden by a property
        /// type.</param>
        public AttributeType(string clrType = default(string), string cdsaType = default(string), string edmTypeName = default(string), bool? isBoolean = default(bool?), bool? isDateTime = default(bool?), bool? isDecimal = default(bool?), bool? isNumber = default(bool?), bool? isValidType = default(bool?), string name = default(string), object equalityComparer = default(object), object comparer = default(object), IEdmType oDataType = default(IEdmType), bool? isCollection = default(bool?))
        {
            ClrType = clrType;
            CdsaType = cdsaType;
            EdmTypeName = edmTypeName;
            IsBoolean = isBoolean;
            IsDateTime = isDateTime;
            IsDecimal = isDecimal;
            IsNumber = isNumber;
            IsValidType = isValidType;
            Name = name;
            EqualityComparer = equalityComparer;
            Comparer = comparer;
            ODataType = oDataType;
            IsCollection = isCollection;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the CLR Type for this property type.
        /// </summary>
        [JsonProperty(PropertyName = "clrType")]
        public string ClrType { get; private set; }

        /// <summary>
        /// Gets or sets possible values include: 'unclassified', 'string',
        /// 'int64', 'double', 'dateTime', 'dateTimeOffset', 'decimal',
        /// 'boolean', 'guid', 'json'
        /// </summary>
        [JsonProperty(PropertyName = "cdsaType")]
        public string CdsaType { get; set; }

        /// <summary>
        /// Gets the EDM type name for the property type, in the format
        /// EdmTypeKind&amp;gt;".
        /// </summary>
        [JsonProperty(PropertyName = "edmTypeName")]
        public string EdmTypeName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isBoolean")]
        public bool? IsBoolean { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDateTime")]
        public bool? IsDateTime { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDecimal")]
        public bool? IsDecimal { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isNumber")]
        public bool? IsNumber { get; private set; }

        /// <summary>
        /// Gets a value indicating whether this type valid and supported by
        /// the runtime.
        /// </summary>
        [JsonProperty(PropertyName = "isValidType")]
        public bool? IsValidType { get; private set; }

        /// <summary>
        /// Gets the name of the property type. Will default to the EdmTypeName
        /// but may be overridden by a property
        /// type.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "equalityComparer")]
        public object EqualityComparer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "comparer")]
        public object Comparer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oDataType")]
        public IEdmType ODataType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isCollection")]
        public bool? IsCollection { get; private set; }

    }
}
